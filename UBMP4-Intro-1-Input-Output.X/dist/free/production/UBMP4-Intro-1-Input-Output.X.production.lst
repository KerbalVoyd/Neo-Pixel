

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Dec 09 10:46:10 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F1459
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	clrtext,global,class=CODE,delta=2
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.20
    17                           ; Generated 12/02/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F1459 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0015                     	;# 
    68  0016                     	;# 
    69  0016                     	;# 
    70  0017                     	;# 
    71  0018                     	;# 
    72  0019                     	;# 
    73  001A                     	;# 
    74  001B                     	;# 
    75  001C                     	;# 
    76  008C                     	;# 
    77  008D                     	;# 
    78  008E                     	;# 
    79  0091                     	;# 
    80  0092                     	;# 
    81  0095                     	;# 
    82  0096                     	;# 
    83  0097                     	;# 
    84  0098                     	;# 
    85  0099                     	;# 
    86  009A                     	;# 
    87  009B                     	;# 
    88  009B                     	;# 
    89  009C                     	;# 
    90  009D                     	;# 
    91  009E                     	;# 
    92  009F                     	;# 
    93  010C                     	;# 
    94  010D                     	;# 
    95  010E                     	;# 
    96  0111                     	;# 
    97  0112                     	;# 
    98  0113                     	;# 
    99  0114                     	;# 
   100  0115                     	;# 
   101  0116                     	;# 
   102  0117                     	;# 
   103  0118                     	;# 
   104  0119                     	;# 
   105  011D                     	;# 
   106  018C                     	;# 
   107  018D                     	;# 
   108  018E                     	;# 
   109  0191                     	;# 
   110  0191                     	;# 
   111  0192                     	;# 
   112  0193                     	;# 
   113  0193                     	;# 
   114  0194                     	;# 
   115  0195                     	;# 
   116  0196                     	;# 
   117  0197                     	;# 
   118  0199                     	;# 
   119  019A                     	;# 
   120  019B                     	;# 
   121  019B                     	;# 
   122  019C                     	;# 
   123  019D                     	;# 
   124  019E                     	;# 
   125  019F                     	;# 
   126  020C                     	;# 
   127  020D                     	;# 
   128  0211                     	;# 
   129  0211                     	;# 
   130  0212                     	;# 
   131  0212                     	;# 
   132  0213                     	;# 
   133  0213                     	;# 
   134  0214                     	;# 
   135  0214                     	;# 
   136  0215                     	;# 
   137  0215                     	;# 
   138  0215                     	;# 
   139  0216                     	;# 
   140  0216                     	;# 
   141  0217                     	;# 
   142  0217                     	;# 
   143  0391                     	;# 
   144  0392                     	;# 
   145  0393                     	;# 
   146  0394                     	;# 
   147  0395                     	;# 
   148  0396                     	;# 
   149  039A                     	;# 
   150  039B                     	;# 
   151  0611                     	;# 
   152  0612                     	;# 
   153  0613                     	;# 
   154  0613                     	;# 
   155  0614                     	;# 
   156  0615                     	;# 
   157  0616                     	;# 
   158  0616                     	;# 
   159  0691                     	;# 
   160  0692                     	;# 
   161  0693                     	;# 
   162  0694                     	;# 
   163  0695                     	;# 
   164  0E8E                     	;# 
   165  0E8F                     	;# 
   166  0E90                     	;# 
   167  0E91                     	;# 
   168  0E92                     	;# 
   169  0E93                     	;# 
   170  0E94                     	;# 
   171  0E94                     	;# 
   172  0E95                     	;# 
   173  0E96                     	;# 
   174  0E97                     	;# 
   175  0E98                     	;# 
   176  0E99                     	;# 
   177  0E9A                     	;# 
   178  0E9B                     	;# 
   179  0E9C                     	;# 
   180  0E9D                     	;# 
   181  0E9E                     	;# 
   182  0E9F                     	;# 
   183  0FE4                     	;# 
   184  0FE5                     	;# 
   185  0FE6                     	;# 
   186  0FE7                     	;# 
   187  0FE8                     	;# 
   188  0FE9                     	;# 
   189  0FEA                     	;# 
   190  0FEB                     	;# 
   191  0FED                     	;# 
   192  0FEE                     	;# 
   193  0FEF                     	;# 
   194  0000                     	;# 
   195  0001                     	;# 
   196  0002                     	;# 
   197  0003                     	;# 
   198  0004                     	;# 
   199  0005                     	;# 
   200  0006                     	;# 
   201  0007                     	;# 
   202  0008                     	;# 
   203  0009                     	;# 
   204  000A                     	;# 
   205  000B                     	;# 
   206  000C                     	;# 
   207  000D                     	;# 
   208  000E                     	;# 
   209  0011                     	;# 
   210  0012                     	;# 
   211  0015                     	;# 
   212  0016                     	;# 
   213  0016                     	;# 
   214  0017                     	;# 
   215  0018                     	;# 
   216  0019                     	;# 
   217  001A                     	;# 
   218  001B                     	;# 
   219  001C                     	;# 
   220  008C                     	;# 
   221  008D                     	;# 
   222  008E                     	;# 
   223  0091                     	;# 
   224  0092                     	;# 
   225  0095                     	;# 
   226  0096                     	;# 
   227  0097                     	;# 
   228  0098                     	;# 
   229  0099                     	;# 
   230  009A                     	;# 
   231  009B                     	;# 
   232  009B                     	;# 
   233  009C                     	;# 
   234  009D                     	;# 
   235  009E                     	;# 
   236  009F                     	;# 
   237  010C                     	;# 
   238  010D                     	;# 
   239  010E                     	;# 
   240  0111                     	;# 
   241  0112                     	;# 
   242  0113                     	;# 
   243  0114                     	;# 
   244  0115                     	;# 
   245  0116                     	;# 
   246  0117                     	;# 
   247  0118                     	;# 
   248  0119                     	;# 
   249  011D                     	;# 
   250  018C                     	;# 
   251  018D                     	;# 
   252  018E                     	;# 
   253  0191                     	;# 
   254  0191                     	;# 
   255  0192                     	;# 
   256  0193                     	;# 
   257  0193                     	;# 
   258  0194                     	;# 
   259  0195                     	;# 
   260  0196                     	;# 
   261  0197                     	;# 
   262  0199                     	;# 
   263  019A                     	;# 
   264  019B                     	;# 
   265  019B                     	;# 
   266  019C                     	;# 
   267  019D                     	;# 
   268  019E                     	;# 
   269  019F                     	;# 
   270  020C                     	;# 
   271  020D                     	;# 
   272  0211                     	;# 
   273  0211                     	;# 
   274  0212                     	;# 
   275  0212                     	;# 
   276  0213                     	;# 
   277  0213                     	;# 
   278  0214                     	;# 
   279  0214                     	;# 
   280  0215                     	;# 
   281  0215                     	;# 
   282  0215                     	;# 
   283  0216                     	;# 
   284  0216                     	;# 
   285  0217                     	;# 
   286  0217                     	;# 
   287  0391                     	;# 
   288  0392                     	;# 
   289  0393                     	;# 
   290  0394                     	;# 
   291  0395                     	;# 
   292  0396                     	;# 
   293  039A                     	;# 
   294  039B                     	;# 
   295  0611                     	;# 
   296  0612                     	;# 
   297  0613                     	;# 
   298  0613                     	;# 
   299  0614                     	;# 
   300  0615                     	;# 
   301  0616                     	;# 
   302  0616                     	;# 
   303  0691                     	;# 
   304  0692                     	;# 
   305  0693                     	;# 
   306  0694                     	;# 
   307  0695                     	;# 
   308  0E8E                     	;# 
   309  0E8F                     	;# 
   310  0E90                     	;# 
   311  0E91                     	;# 
   312  0E92                     	;# 
   313  0E93                     	;# 
   314  0E94                     	;# 
   315  0E94                     	;# 
   316  0E95                     	;# 
   317  0E96                     	;# 
   318  0E97                     	;# 
   319  0E98                     	;# 
   320  0E99                     	;# 
   321  0E9A                     	;# 
   322  0E9B                     	;# 
   323  0E9C                     	;# 
   324  0E9D                     	;# 
   325  0E9E                     	;# 
   326  0E9F                     	;# 
   327  0FE4                     	;# 
   328  0FE5                     	;# 
   329  0FE6                     	;# 
   330  0FE7                     	;# 
   331  0FE8                     	;# 
   332  0FE9                     	;# 
   333  0FEA                     	;# 
   334  0FEB                     	;# 
   335  0FED                     	;# 
   336  0FEE                     	;# 
   337  0FEF                     	;# 
   338  000C                     _PORTAbits	set	12
   339  009C                     _ADRESH	set	156
   340  009F                     _ADCON2	set	159
   341  009E                     _ADCON1	set	158
   342  009D                     _ADCON0	set	157
   343  008E                     _TRISCbits	set	142
   344  008E                     _TRISC	set	142
   345  008D                     _TRISB	set	141
   346  008C                     _TRISA	set	140
   347  0095                     _OPTION_REG	set	149
   348  0099                     _OSCCON	set	153
   349  04E9                     _GO	set	1257
   350  04E8                     _ADON	set	1256
   351  04D6                     _PLLRDY	set	1238
   352  010E                     _LATCbits	set	270
   353  010E                     _LATC	set	270
   354  010D                     _LATB	set	269
   355  010C                     _LATA	set	268
   356  018E                     _ANSELC	set	398
   357  018D                     _ANSELB	set	397
   358  018C                     _ANSELA	set	396
   359  020D                     _WPUB	set	525
   360  020C                     _WPUA	set	524
   361  039B                     _ACTCON	set	923
   362                           
   363                           	psect	cinit
   364  0FF5                     start_initialization:	
   365                           ; #config settings
   366                           
   367  0FF5                     __initialization:
   368                           
   369                           ; Clear objects allocated to BANK0
   370  0FF5  3020               	movlw	low __pbssBANK0
   371  0FF6  0084               	movwf	4
   372  0FF7  3000               	movlw	high __pbssBANK0
   373  0FF8  0085               	movwf	5
   374  0FF9  3022               	movlw	34
   375  0FFA  318E  266A  318F   	fcall	clear_ram0
   376  0FFD                     end_of_initialization:	
   377                           ;End of C runtime variable initialization code
   378                           
   379  0FFD                     __end_of__initialization:
   380  0FFD  0020               	movlb	0
   381  0FFE  318E  2EEA         	ljmp	_main	;jump to C main() function
   382                           
   383                           	psect	bssBANK0
   384  0020                     __pbssBANK0:
   385  0020                     _blue:
   386  0020                     	ds	1
   387  0021                     _green:
   388  0021                     	ds	1
   389  0022                     _red:
   390  0022                     	ds	1
   391  0023                     _leds:
   392  0023                     	ds	1
   393  0024                     _blueArray:
   394  0024                     	ds	10
   395  002E                     _greenArray:
   396  002E                     	ds	10
   397  0038                     _redArray:
   398  0038                     	ds	10
   399                           
   400                           	psect	clrtext
   401  0E6A                     clear_ram0:	
   402                           ;	Called with FSR0 containing the base address, and
   403                           ;	WREG with the size to clear
   404                           
   405  0E6A  0064               	clrwdt	;clear the watchdog before getting into this loop
   406  0E6B                     clrloop0:
   407  0E6B  0180               	clrf	0	;clear RAM location pointed to by FSR
   408  0E6C  3101               	addfsr 0,1
   409  0E6D  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   410  0E6E  2E6B               	goto	clrloop0	;have we reached the end yet?
   411  0E6F  3400               	retlw	0	;all done for this memory range, return
   412                           
   413                           	psect	cstackCOMMON
   414  0070                     __pcstackCOMMON:
   415  0070                     ?_neopixel_send:
   416  0070                     ??_neopixel_send:	
   417                           ; 1 bytes @ 0x0
   418                           
   419  0070                     ?_OSC_config:	
   420                           ; 1 bytes @ 0x0
   421                           
   422  0070                     ??_OSC_config:	
   423                           ; 1 bytes @ 0x0
   424                           
   425  0070                     ?_UBMP4_config:	
   426                           ; 1 bytes @ 0x0
   427                           
   428  0070                     ??_UBMP4_config:	
   429                           ; 1 bytes @ 0x0
   430                           
   431  0070                     ?_main:	
   432                           ; 1 bytes @ 0x0
   433                           
   434                           
   435                           ; 2 bytes @ 0x0
   436  0070                     	ds	1
   437  0071                     neopixel_send@colour:
   438                           
   439                           ; 1 bytes @ 0x1
   440  0071                     	ds	1
   441  0072                     neopixel_send@bits:
   442                           
   443                           ; 1 bytes @ 0x2
   444  0072                     	ds	1
   445  0073                     ?_neopixel_fill_a:
   446  0073                     neopixel_fill_a@red:	
   447                           ; 1 bytes @ 0x3
   448                           
   449                           
   450                           ; 1 bytes @ 0x3
   451  0073                     	ds	1
   452  0074                     neopixel_fill_a@green:
   453                           
   454                           ; 1 bytes @ 0x4
   455  0074                     	ds	1
   456  0075                     neopixel_fill_a@blue:
   457                           
   458                           ; 1 bytes @ 0x5
   459  0075                     	ds	1
   460  0076                     ??_neopixel_fill_a:
   461                           
   462                           ; 1 bytes @ 0x6
   463  0076                     	ds	2
   464  0078                     neopixel_fill_a@leds:
   465                           
   466                           ; 1 bytes @ 0x8
   467  0078                     	ds	1
   468  0079                     neopixel_fill_a@ledNum:
   469                           
   470                           ; 2 bytes @ 0x9
   471  0079                     	ds	2
   472  007B                     ??_main:
   473                           
   474                           ; 1 bytes @ 0xB
   475  007B                     	ds	3
   476                           
   477                           	psect	cstackBANK0
   478  0042                     __pcstackBANK0:
   479  0042                     main@ii:
   480                           
   481                           ; 2 bytes @ 0x0
   482  0042                     	ds	2
   483  0044                     main@i4:
   484                           
   485                           ; 2 bytes @ 0x2
   486  0044                     	ds	2
   487  0046                     main@prevNum:
   488                           
   489                           ; 2 bytes @ 0x4
   490  0046                     	ds	2
   491  0048                     main@i:
   492                           
   493                           ; 2 bytes @ 0x6
   494  0048                     	ds	2
   495  004A                     main@i3:
   496                           
   497                           ; 2 bytes @ 0x8
   498  004A                     	ds	2
   499  004C                     main@leftNum:
   500                           
   501                           ; 2 bytes @ 0xA
   502  004C                     	ds	2
   503  004E                     main@prevLeftNum:
   504                           
   505                           ; 2 bytes @ 0xC
   506  004E                     	ds	2
   507                           
   508                           	psect	maintext
   509  0EEA                     __pmaintext:	
   510 ;;
   511 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   512 ;;
   513 ;; *************** function _main *****************
   514 ;; Defined at:
   515 ;;		line 39 in file "Intro-1-Input-Ouput.c"
   516 ;; Parameters:    Size  Location     Type
   517 ;;		None
   518 ;; Auto vars:     Size  Location     Type
   519 ;;  i4              2    2[BANK0 ] int 
   520 ;;  ii              2    0[BANK0 ] int 
   521 ;;  i3              2    8[BANK0 ] int 
   522 ;;  i               2    6[BANK0 ] int 
   523 ;;  prevLeftNum     2   12[BANK0 ] int 
   524 ;;  leftNum         2   10[BANK0 ] int 
   525 ;;  prevNum         2    4[BANK0 ] int 
   526 ;; Return value:  Size  Location     Type
   527 ;;                  2  107[None  ] int 
   528 ;; Registers used:
   529 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   530 ;; Tracked objects:
   531 ;;		On entry : B1F/0
   532 ;;		On exit  : 0/0
   533 ;;		Unchanged: 0/0
   534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   536 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
   537 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   538 ;;      Totals:         3      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
   539 ;;Total ram usage:       17 bytes
   540 ;; Hardware stack levels required when called: 2
   541 ;; This function calls:
   542 ;;		_OSC_config
   543 ;;		_UBMP4_config
   544 ;;		_neopixel_fill_a
   545 ;; This function is called by:
   546 ;;		Startup code after reset
   547 ;; This function uses a non-reentrant model
   548 ;;
   549                           
   550                           
   551                           ;psect for function _main
   552  0EEA                     _main:
   553  0EEA                     l853:	
   554                           ;incstack = 0
   555                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   556                           
   557                           
   558                           ;Intro-1-Input-Ouput.c: 42:     OSC_config();
   559  0EEA  318E  2670  318E   	fcall	_OSC_config
   560                           
   561                           ;Intro-1-Input-Ouput.c: 43:     UBMP4_config();
   562  0EED  318E  2697  318E   	fcall	_UBMP4_config
   563  0EF0                     l855:
   564                           
   565                           ;Intro-1-Input-Ouput.c: 48:  {;Intro-1-Input-Ouput.c: 50:         int prevNum = (9/2)+1;
   566  0EF0  3005               	movlw	5
   567  0EF1  0020               	movlb	0	; select bank0
   568  0EF2  00C6               	movwf	main@prevNum
   569  0EF3  3000               	movlw	0
   570  0EF4  00C7               	movwf	main@prevNum+1
   571  0EF5                     l857:
   572                           
   573                           ;Intro-1-Input-Ouput.c: 51:         int leftNum = (9/2)+1 -1;
   574  0EF5  3004               	movlw	4
   575  0EF6  00CC               	movwf	main@leftNum
   576  0EF7  3000               	movlw	0
   577  0EF8  00CD               	movwf	main@leftNum+1
   578  0EF9                     l859:
   579                           
   580                           ;Intro-1-Input-Ouput.c: 52:         int prevLeftNum = (9/2)+1;
   581  0EF9  3005               	movlw	5
   582  0EFA  00CE               	movwf	main@prevLeftNum
   583  0EFB  3000               	movlw	0
   584  0EFC  00CF               	movwf	main@prevLeftNum+1
   585  0EFD                     l861:
   586                           
   587                           ;Intro-1-Input-Ouput.c: 55:         for (int i = (9/2)+1; i <= (9); i++) {
   588  0EFD  3005               	movlw	5
   589  0EFE  00C8               	movwf	main@i
   590  0EFF  3000               	movlw	0
   591  0F00  00C9               	movwf	main@i+1
   592  0F01                     l867:
   593                           
   594                           ;Intro-1-Input-Ouput.c: 56:             for (int ii = 0; ii < 255-(255%1); ii++) {
   595  0F01  0020               	movlb	0	; select bank0
   596  0F02  01C2               	clrf	main@ii
   597  0F03  01C3               	clrf	main@ii+1
   598  0F04                     l873:
   599                           
   600                           ;Intro-1-Input-Ouput.c: 58:                 redArray[i]+=1;
   601  0F04  3001               	movlw	1
   602  0F05  00FB               	movwf	??_main
   603  0F06  0020               	movlb	0	; select bank0
   604  0F07  0848               	movf	main@i,w
   605  0F08  3E38               	addlw	(low (_redArray| 0))& (0+255)
   606  0F09  0086               	movwf	6
   607  0F0A  0187               	clrf	7
   608  0F0B  087B               	movf	??_main,w
   609  0F0C  0781               	addwf	1,f
   610                           
   611                           ;Intro-1-Input-Ouput.c: 59:                 redArray[leftNum]+=1;
   612  0F0D  3001               	movlw	1
   613  0F0E  00FB               	movwf	??_main
   614  0F0F  084C               	movf	main@leftNum,w
   615  0F10  3E38               	addlw	(low (_redArray| 0))& (0+255)
   616  0F11  0086               	movwf	6
   617  0F12  0187               	clrf	7
   618  0F13  087B               	movf	??_main,w
   619  0F14  0781               	addwf	1,f
   620                           
   621                           ;Intro-1-Input-Ouput.c: 60:                 redArray[prevNum]-=1;
   622  0F15  0846               	movf	main@prevNum,w
   623  0F16  3E38               	addlw	(low (_redArray| 0))& (0+255)
   624  0F17  0086               	movwf	6
   625  0F18  0187               	clrf	7
   626  0F19  3001               	movlw	1
   627  0F1A  0281               	subwf	1,f
   628  0F1B                     l875:
   629                           
   630                           ;Intro-1-Input-Ouput.c: 62:                 if (prevLeftNum != (9/2)+1) {
   631  0F1B  3005               	movlw	5
   632  0F1C  064E               	xorwf	main@prevLeftNum,w
   633  0F1D  044F               	iorwf	main@prevLeftNum+1,w
   634  0F1E  1903               	btfsc	3,2
   635  0F1F  2F21               	goto	u191
   636  0F20  2F22               	goto	u190
   637  0F21                     u191:
   638  0F21  2F28               	goto	l879
   639  0F22                     u190:
   640  0F22                     l877:
   641                           
   642                           ;Intro-1-Input-Ouput.c: 63:                     redArray[prevLeftNum]-=1;
   643  0F22  084E               	movf	main@prevLeftNum,w
   644  0F23  3E38               	addlw	(low (_redArray| 0))& (0+255)
   645  0F24  0086               	movwf	6
   646  0F25  0187               	clrf	7
   647  0F26  3001               	movlw	1
   648  0F27  0281               	subwf	1,f
   649  0F28                     l879:
   650                           
   651                           ;Intro-1-Input-Ouput.c: 65:                 neopixel_fill_a(9, redArray, greenArray, blu
      +                          eArray);
   652  0F28  3038               	movlw	(low (_redArray| 0))& (0+255)
   653  0F29  00FB               	movwf	??_main
   654  0F2A  087B               	movf	??_main,w
   655  0F2B  00F3               	movwf	neopixel_fill_a@red
   656  0F2C  302E               	movlw	(low (_greenArray| 0))& (0+255)
   657  0F2D  00FC               	movwf	??_main+1
   658  0F2E  087C               	movf	??_main+1,w
   659  0F2F  00F4               	movwf	neopixel_fill_a@green
   660  0F30  3024               	movlw	(low (_blueArray| 0))& (0+255)
   661  0F31  00FD               	movwf	??_main+2
   662  0F32  087D               	movf	??_main+2,w
   663  0F33  00F5               	movwf	neopixel_fill_a@blue
   664  0F34  3009               	movlw	9
   665  0F35  318E  26B6  318E   	fcall	_neopixel_fill_a
   666  0F38                     l881:
   667                           
   668                           ;Intro-1-Input-Ouput.c: 67:                 _delay((unsigned long)((1000)*(48000000/4000
      +                          000.0)));
   669  0F38  3010               	movlw	16
   670  0F39  00FB               	movwf	??_main
   671  0F3A  3094               	movlw	148
   672  0F3B                     u277:
   673  0F3B  0B89               	decfsz	9,f
   674  0F3C  2F3B               	goto	u277
   675  0F3D  0BFB               	decfsz	??_main,f
   676  0F3E  2F3B               	goto	u277
   677  0F3F  3200               	nop2
   678  0F40                     l883:
   679                           
   680                           ;Intro-1-Input-Ouput.c: 68:             }
   681  0F40  3001               	movlw	1
   682  0F41  0020               	movlb	0	; select bank0
   683  0F42  07C2               	addwf	main@ii,f
   684  0F43  3000               	movlw	0
   685  0F44  3DC3               	addwfc	main@ii+1,f
   686  0F45                     l885:
   687  0F45  0843               	movf	main@ii+1,w
   688  0F46  3A80               	xorlw	128
   689  0F47  00FB               	movwf	??_main
   690  0F48  3080               	movlw	128
   691  0F49  027B               	subwf	??_main,w
   692  0F4A  1D03               	skipz
   693  0F4B  2F4E               	goto	u205
   694  0F4C  30FF               	movlw	255
   695  0F4D  0242               	subwf	main@ii,w
   696  0F4E                     u205:
   697  0F4E  1C03               	skipc
   698  0F4F  2F51               	goto	u201
   699  0F50  2F52               	goto	u200
   700  0F51                     u201:
   701  0F51  2F04               	goto	l873
   702  0F52                     u200:
   703  0F52                     l887:
   704                           
   705                           ;Intro-1-Input-Ouput.c: 69:             prevLeftNum = leftNum;
   706  0F52  0020               	movlb	0	; select bank0
   707  0F53  084D               	movf	main@leftNum+1,w
   708  0F54  00CF               	movwf	main@prevLeftNum+1
   709  0F55  084C               	movf	main@leftNum,w
   710  0F56  00CE               	movwf	main@prevLeftNum
   711                           
   712                           ;Intro-1-Input-Ouput.c: 70:             leftNum-=1;
   713  0F57  30FF               	movlw	255
   714  0F58  07CC               	addwf	main@leftNum,f
   715  0F59  30FF               	movlw	255
   716  0F5A  3DCD               	addwfc	main@leftNum+1,f
   717                           
   718                           ;Intro-1-Input-Ouput.c: 71:             prevNum = i;
   719  0F5B  0849               	movf	main@i+1,w
   720  0F5C  00C7               	movwf	main@prevNum+1
   721  0F5D  0848               	movf	main@i,w
   722  0F5E  00C6               	movwf	main@prevNum
   723                           
   724                           ;Intro-1-Input-Ouput.c: 73:         }
   725  0F5F  3001               	movlw	1
   726  0F60  07C8               	addwf	main@i,f
   727  0F61  3000               	movlw	0
   728  0F62  3DC9               	addwfc	main@i+1,f
   729  0F63  0849               	movf	main@i+1,w
   730  0F64  3A80               	xorlw	128
   731  0F65  00FB               	movwf	??_main
   732  0F66  3080               	movlw	128
   733  0F67  027B               	subwf	??_main,w
   734  0F68  1D03               	skipz
   735  0F69  2F6C               	goto	u215
   736  0F6A  300A               	movlw	10
   737  0F6B  0248               	subwf	main@i,w
   738  0F6C                     u215:
   739  0F6C  1C03               	skipc
   740  0F6D  2F6F               	goto	u211
   741  0F6E  2F70               	goto	u210
   742  0F6F                     u211:
   743  0F6F  2F01               	goto	l867
   744  0F70                     u210:
   745  0F70                     l889:
   746                           
   747                           ;Intro-1-Input-Ouput.c: 74:         leftNum = -1;
   748  0F70  30FF               	movlw	255
   749  0F71  0020               	movlb	0	; select bank0
   750  0F72  00CC               	movwf	main@leftNum
   751  0F73  30FF               	movlw	255
   752  0F74  00CD               	movwf	main@leftNum+1
   753                           
   754                           ;Intro-1-Input-Ouput.c: 75:         prevLeftNum = -1;
   755  0F75  30FF               	movlw	255
   756  0F76  00CE               	movwf	main@prevLeftNum
   757  0F77  30FF               	movlw	255
   758  0F78  00CF               	movwf	main@prevLeftNum+1
   759                           
   760                           ;Intro-1-Input-Ouput.c: 76:         for (int i3 = 9; i3 >= (9/2)+1; i3--) {
   761  0F79  3009               	movlw	9
   762  0F7A  00CA               	movwf	main@i3
   763  0F7B  3000               	movlw	0
   764  0F7C  00CB               	movwf	main@i3+1
   765  0F7D                     l893:
   766                           
   767                           ;Intro-1-Input-Ouput.c: 77:             for (int i4 = 0; i4 < 255-(255%1); i4++) {
   768  0F7D  0020               	movlb	0	; select bank0
   769  0F7E  01C4               	clrf	main@i4
   770  0F7F  01C5               	clrf	main@i4+1
   771  0F80                     l899:
   772                           
   773                           ;Intro-1-Input-Ouput.c: 79:                 redArray[i3]+=1;
   774  0F80  3001               	movlw	1
   775  0F81  00FB               	movwf	??_main
   776  0F82  0020               	movlb	0	; select bank0
   777  0F83  084A               	movf	main@i3,w
   778  0F84  3E38               	addlw	(low (_redArray| 0))& (0+255)
   779  0F85  0086               	movwf	6
   780  0F86  0187               	clrf	7
   781  0F87  087B               	movf	??_main,w
   782  0F88  0781               	addwf	1,f
   783                           
   784                           ;Intro-1-Input-Ouput.c: 81:                     redArray[leftNum]+=1;
   785  0F89  3001               	movlw	1
   786  0F8A  00FB               	movwf	??_main
   787  0F8B  084C               	movf	main@leftNum,w
   788  0F8C  3E38               	addlw	(low (_redArray| 0))& (0+255)
   789  0F8D  0086               	movwf	6
   790  0F8E  0187               	clrf	7
   791  0F8F  087B               	movf	??_main,w
   792  0F90  0781               	addwf	1,f
   793                           
   794                           ;Intro-1-Input-Ouput.c: 83:                 redArray[prevNum]-=1;
   795  0F91  0846               	movf	main@prevNum,w
   796  0F92  3E38               	addlw	(low (_redArray| 0))& (0+255)
   797  0F93  0086               	movwf	6
   798  0F94  0187               	clrf	7
   799  0F95  3001               	movlw	1
   800  0F96  0281               	subwf	1,f
   801  0F97                     l901:
   802                           
   803                           ;Intro-1-Input-Ouput.c: 85:                 if (prevLeftNum != (9/2)+1) {
   804  0F97  3005               	movlw	5
   805  0F98  064E               	xorwf	main@prevLeftNum,w
   806  0F99  044F               	iorwf	main@prevLeftNum+1,w
   807  0F9A  1903               	btfsc	3,2
   808  0F9B  2F9D               	goto	u221
   809  0F9C  2F9E               	goto	u220
   810  0F9D                     u221:
   811  0F9D  2FA4               	goto	l905
   812  0F9E                     u220:
   813  0F9E                     l903:
   814                           
   815                           ;Intro-1-Input-Ouput.c: 87:                     redArray[prevLeftNum]-=1;
   816  0F9E  084E               	movf	main@prevLeftNum,w
   817  0F9F  3E38               	addlw	(low (_redArray| 0))& (0+255)
   818  0FA0  0086               	movwf	6
   819  0FA1  0187               	clrf	7
   820  0FA2  3001               	movlw	1
   821  0FA3  0281               	subwf	1,f
   822  0FA4                     l905:
   823                           
   824                           ;Intro-1-Input-Ouput.c: 89:                 neopixel_fill_a(9, redArray, greenArray, blu
      +                          eArray);
   825  0FA4  3038               	movlw	(low (_redArray| 0))& (0+255)
   826  0FA5  00FB               	movwf	??_main
   827  0FA6  087B               	movf	??_main,w
   828  0FA7  00F3               	movwf	neopixel_fill_a@red
   829  0FA8  302E               	movlw	(low (_greenArray| 0))& (0+255)
   830  0FA9  00FC               	movwf	??_main+1
   831  0FAA  087C               	movf	??_main+1,w
   832  0FAB  00F4               	movwf	neopixel_fill_a@green
   833  0FAC  3024               	movlw	(low (_blueArray| 0))& (0+255)
   834  0FAD  00FD               	movwf	??_main+2
   835  0FAE  087D               	movf	??_main+2,w
   836  0FAF  00F5               	movwf	neopixel_fill_a@blue
   837  0FB0  3009               	movlw	9
   838  0FB1  318E  26B6  318E   	fcall	_neopixel_fill_a
   839  0FB4                     l907:
   840                           
   841                           ;Intro-1-Input-Ouput.c: 91:                 _delay((unsigned long)((1000)*(48000000/4000
      +                          000.0)));
   842  0FB4  3010               	movlw	16
   843  0FB5  00FB               	movwf	??_main
   844  0FB6  3094               	movlw	148
   845  0FB7                     u287:
   846  0FB7  0B89               	decfsz	9,f
   847  0FB8  2FB7               	goto	u287
   848  0FB9  0BFB               	decfsz	??_main,f
   849  0FBA  2FB7               	goto	u287
   850  0FBB  3200               	nop2
   851  0FBC                     l909:
   852                           
   853                           ;Intro-1-Input-Ouput.c: 92:             }
   854  0FBC  3001               	movlw	1
   855  0FBD  0020               	movlb	0	; select bank0
   856  0FBE  07C4               	addwf	main@i4,f
   857  0FBF  3000               	movlw	0
   858  0FC0  3DC5               	addwfc	main@i4+1,f
   859  0FC1                     l911:
   860  0FC1  0845               	movf	main@i4+1,w
   861  0FC2  3A80               	xorlw	128
   862  0FC3  00FB               	movwf	??_main
   863  0FC4  3080               	movlw	128
   864  0FC5  027B               	subwf	??_main,w
   865  0FC6  1D03               	skipz
   866  0FC7  2FCA               	goto	u235
   867  0FC8  30FF               	movlw	255
   868  0FC9  0244               	subwf	main@i4,w
   869  0FCA                     u235:
   870  0FCA  1C03               	skipc
   871  0FCB  2FCD               	goto	u231
   872  0FCC  2FCE               	goto	u230
   873  0FCD                     u231:
   874  0FCD  2F80               	goto	l899
   875  0FCE                     u230:
   876  0FCE                     l913:
   877                           
   878                           ;Intro-1-Input-Ouput.c: 93:             prevLeftNum = leftNum;
   879  0FCE  0020               	movlb	0	; select bank0
   880  0FCF  084D               	movf	main@leftNum+1,w
   881  0FD0  00CF               	movwf	main@prevLeftNum+1
   882  0FD1  084C               	movf	main@leftNum,w
   883  0FD2  00CE               	movwf	main@prevLeftNum
   884                           
   885                           ;Intro-1-Input-Ouput.c: 94:             leftNum+=1;
   886  0FD3  3001               	movlw	1
   887  0FD4  07CC               	addwf	main@leftNum,f
   888  0FD5  3000               	movlw	0
   889  0FD6  3DCD               	addwfc	main@leftNum+1,f
   890                           
   891                           ;Intro-1-Input-Ouput.c: 95:             prevNum = i3;
   892  0FD7  084B               	movf	main@i3+1,w
   893  0FD8  00C7               	movwf	main@prevNum+1
   894  0FD9  084A               	movf	main@i3,w
   895  0FDA  00C6               	movwf	main@prevNum
   896                           
   897                           ;Intro-1-Input-Ouput.c: 97:         }
   898  0FDB  30FF               	movlw	255
   899  0FDC  07CA               	addwf	main@i3,f
   900  0FDD  30FF               	movlw	255
   901  0FDE  3DCB               	addwfc	main@i3+1,f
   902  0FDF  084B               	movf	main@i3+1,w
   903  0FE0  3A80               	xorlw	128
   904  0FE1  00FB               	movwf	??_main
   905  0FE2  3080               	movlw	128
   906  0FE3  027B               	subwf	??_main,w
   907  0FE4  1D03               	skipz
   908  0FE5  2FE8               	goto	u245
   909  0FE6  3005               	movlw	5
   910  0FE7  024A               	subwf	main@i3,w
   911  0FE8                     u245:
   912  0FE8  1803               	skipnc
   913  0FE9  2FEB               	goto	u241
   914  0FEA  2FEC               	goto	u240
   915  0FEB                     u241:
   916  0FEB  2F7D               	goto	l893
   917  0FEC                     u240:
   918  0FEC                     l115:
   919                           
   920                           ;Intro-1-Input-Ouput.c: 103:         if(PORTAbits.RA3 == 0)
   921  0FEC  0020               	movlb	0	; select bank0
   922  0FED  198C               	btfsc	12,3	;volatile
   923  0FEE  2FF0               	goto	u251
   924  0FEF  2FF1               	goto	u250
   925  0FF0                     u251:
   926  0FF0  2EF0               	goto	l855
   927  0FF1                     u250:
   928  0FF1                     l915:
   929  0FF1  0001               	reset	;# 
   930  0FF2  2EF0               	goto	l855
   931  0FF3  3188  2803         	ljmp	start
   932  0FF5                     __end_of_main:
   933                           
   934                           	psect	text1
   935  0EB6                     __ptext1:	
   936 ;; *************** function _neopixel_fill_a *****************
   937 ;; Defined at:
   938 ;;		line 110 in file "Intro-1-Input-Ouput.c"
   939 ;; Parameters:    Size  Location     Type
   940 ;;  leds            1    wreg     unsigned char 
   941 ;;  red             1    3[COMMON] PTR unsigned char 
   942 ;;		 -> redArray(10), 
   943 ;;  green           1    4[COMMON] PTR unsigned char 
   944 ;;		 -> greenArray(10), 
   945 ;;  blue            1    5[COMMON] PTR unsigned char 
   946 ;;		 -> blueArray(10), 
   947 ;; Auto vars:     Size  Location     Type
   948 ;;  leds            1    8[COMMON] unsigned char 
   949 ;;  ledNum          2    9[COMMON] int 
   950 ;; Return value:  Size  Location     Type
   951 ;;                  1    wreg      void 
   952 ;; Registers used:
   953 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   954 ;; Tracked objects:
   955 ;;		On entry : 0/0
   956 ;;		On exit  : 0/0
   957 ;;		Unchanged: 0/0
   958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   959 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   960 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   961 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   962 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   963 ;;Total ram usage:        8 bytes
   964 ;; Hardware stack levels used: 1
   965 ;; Hardware stack levels required when called: 1
   966 ;; This function calls:
   967 ;;		_neopixel_send
   968 ;; This function is called by:
   969 ;;		_main
   970 ;; This function uses a non-reentrant model
   971 ;;
   972                           
   973                           
   974                           ;psect for function _neopixel_fill_a
   975  0EB6                     _neopixel_fill_a:
   976                           
   977                           ;incstack = 0
   978                           ; Regs used in _neopixel_fill_a: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   979                           ;neopixel_fill_a@leds stored from wreg
   980  0EB6  00F8               	movwf	neopixel_fill_a@leds
   981  0EB7                     l845:
   982                           
   983                           ;Intro-1-Input-Ouput.c: 111:     int ledNum = 0;
   984  0EB7  01F9               	clrf	neopixel_fill_a@ledNum
   985  0EB8  01FA               	clrf	neopixel_fill_a@ledNum+1
   986                           
   987                           ;Intro-1-Input-Ouput.c: 112:     for(; ledNum != leds; ledNum++) {
   988  0EB9  2EDC               	goto	l851
   989  0EBA                     l847:
   990                           
   991                           ;Intro-1-Input-Ouput.c: 113:         neopixel_send(green[ledNum]);
   992  0EBA  0879               	movf	neopixel_fill_a@ledNum,w
   993  0EBB  0774               	addwf	neopixel_fill_a@green,w
   994  0EBC  00F6               	movwf	??_neopixel_fill_a
   995  0EBD  0876               	movf	??_neopixel_fill_a,w
   996  0EBE  0086               	movwf	6
   997  0EBF  0187               	clrf	7
   998  0EC0  0801               	movf	1,w
   999  0EC1  318E  267C  318E   	fcall	_neopixel_send
  1000                           
  1001                           ;Intro-1-Input-Ouput.c: 114:         neopixel_send(red[ledNum]);
  1002  0EC4  0879               	movf	neopixel_fill_a@ledNum,w
  1003  0EC5  0773               	addwf	neopixel_fill_a@red,w
  1004  0EC6  00F6               	movwf	??_neopixel_fill_a
  1005  0EC7  0876               	movf	??_neopixel_fill_a,w
  1006  0EC8  0086               	movwf	6
  1007  0EC9  0187               	clrf	7
  1008  0ECA  0801               	movf	1,w
  1009  0ECB  318E  267C  318E   	fcall	_neopixel_send
  1010                           
  1011                           ;Intro-1-Input-Ouput.c: 115:         neopixel_send(blue[ledNum]);
  1012  0ECE  0879               	movf	neopixel_fill_a@ledNum,w
  1013  0ECF  0775               	addwf	neopixel_fill_a@blue,w
  1014  0ED0  00F6               	movwf	??_neopixel_fill_a
  1015  0ED1  0876               	movf	??_neopixel_fill_a,w
  1016  0ED2  0086               	movwf	6
  1017  0ED3  0187               	clrf	7
  1018  0ED4  0801               	movf	1,w
  1019  0ED5  318E  267C  318E   	fcall	_neopixel_send
  1020  0ED8                     l849:
  1021                           
  1022                           ;Intro-1-Input-Ouput.c: 116:     }
  1023  0ED8  3001               	movlw	1
  1024  0ED9  07F9               	addwf	neopixel_fill_a@ledNum,f
  1025  0EDA  3000               	movlw	0
  1026  0EDB  3DFA               	addwfc	neopixel_fill_a@ledNum+1,f
  1027  0EDC                     l851:
  1028  0EDC  0878               	movf	neopixel_fill_a@leds,w
  1029  0EDD  00F6               	movwf	??_neopixel_fill_a
  1030  0EDE  01F7               	clrf	??_neopixel_fill_a+1
  1031  0EDF  087A               	movf	neopixel_fill_a@ledNum+1,w
  1032  0EE0  0677               	xorwf	??_neopixel_fill_a+1,w
  1033  0EE1  1D03               	skipz
  1034  0EE2  2EE5               	goto	u185
  1035  0EE3  0879               	movf	neopixel_fill_a@ledNum,w
  1036  0EE4  0676               	xorwf	??_neopixel_fill_a,w
  1037  0EE5                     u185:
  1038  0EE5  1D03               	skipz
  1039  0EE6  2EE8               	goto	u181
  1040  0EE7  2EE9               	goto	u180
  1041  0EE8                     u181:
  1042  0EE8  2EBA               	goto	l847
  1043  0EE9                     u180:
  1044  0EE9                     l128:
  1045  0EE9  0008               	return
  1046  0EEA                     __end_of_neopixel_fill_a:
  1047                           
  1048                           	psect	text2
  1049  0E7C                     __ptext2:	
  1050 ;; *************** function _neopixel_send *****************
  1051 ;; Defined at:
  1052 ;;		line 128 in file "Intro-1-Input-Ouput.c"
  1053 ;; Parameters:    Size  Location     Type
  1054 ;;  colour          1    wreg     unsigned char 
  1055 ;; Auto vars:     Size  Location     Type
  1056 ;;  colour          1    1[COMMON] unsigned char 
  1057 ;;  bits            1    2[COMMON] unsigned char 
  1058 ;; Return value:  Size  Location     Type
  1059 ;;                  1    wreg      void 
  1060 ;; Registers used:
  1061 ;;		wreg, status,2, status,0
  1062 ;; Tracked objects:
  1063 ;;		On entry : 0/0
  1064 ;;		On exit  : 0/0
  1065 ;;		Unchanged: 0/0
  1066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1068 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1069 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1070 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1071 ;;Total ram usage:        3 bytes
  1072 ;; Hardware stack levels used: 1
  1073 ;; This function calls:
  1074 ;;		Nothing
  1075 ;; This function is called by:
  1076 ;;		_neopixel_fill_a
  1077 ;;		_neopixel_fill
  1078 ;; This function uses a non-reentrant model
  1079 ;;
  1080                           
  1081                           
  1082                           ;psect for function _neopixel_send
  1083  0E7C                     _neopixel_send:
  1084                           
  1085                           ;incstack = 0
  1086                           ; Regs used in _neopixel_send: [wreg+status,2+status,0]
  1087                           ;neopixel_send@colour stored from wreg
  1088  0E7C  00F1               	movwf	neopixel_send@colour
  1089  0E7D                     l815:
  1090                           
  1091                           ;Intro-1-Input-Ouput.c: 128: void neopixel_send(unsigned char colour);Intro-1-Input-Oupu
      +                          t.c: 129: {;Intro-1-Input-Ouput.c: 130:     for(unsigned char bits = 8; bits != 0; bits 
      +                          --)
  1092  0E7D  3008               	movlw	8
  1093  0E7E  00F0               	movwf	??_neopixel_send
  1094  0E7F  0870               	movf	??_neopixel_send,w
  1095  0E80  00F2               	movwf	neopixel_send@bits
  1096  0E81                     l136:
  1097                           
  1098                           ;Intro-1-Input-Ouput.c: 131:     {;Intro-1-Input-Ouput.c: 132:         LATCbits.LATC0 = 
      +                          1;
  1099  0E81  0022               	movlb	2	; select bank2
  1100  0E82  140E               	bsf	14,0	;volatile
  1101                           
  1102                           ;Intro-1-Input-Ouput.c: 133:         if((colour & 0b10000000) == 0)
  1103  0E83  1BF1               	btfsc	neopixel_send@colour,7
  1104  0E84  2E86               	goto	u151
  1105  0E85  2E87               	goto	u150
  1106  0E86                     u151:
  1107  0E86  2E88               	goto	l138
  1108  0E87                     u150:
  1109  0E87                     l821:
  1110                           
  1111                           ;Intro-1-Input-Ouput.c: 134:         {;Intro-1-Input-Ouput.c: 135:             LATCbits.
      +                          LATC0 = 0;
  1112  0E87  100E               	bcf	14,0	;volatile
  1113  0E88                     l138:	
  1114                           ;Intro-1-Input-Ouput.c: 136:         }
  1115                           
  1116                           
  1117                           ;Intro-1-Input-Ouput.c: 137:         __nop();
  1118  0E88  0000               	nop
  1119                           
  1120                           ;Intro-1-Input-Ouput.c: 138:         LATCbits.LATC0 = 0;
  1121  0E89  0022               	movlb	2	; select bank2
  1122  0E8A  100E               	bcf	14,0	;volatile
  1123  0E8B                     l823:
  1124                           
  1125                           ;Intro-1-Input-Ouput.c: 139:         colour = colour << 1;
  1126  0E8B  3571               	lslf	neopixel_send@colour,w
  1127  0E8C  00F0               	movwf	??_neopixel_send
  1128  0E8D  0870               	movf	??_neopixel_send,w
  1129  0E8E  00F1               	movwf	neopixel_send@colour
  1130                           
  1131                           ;Intro-1-Input-Ouput.c: 140:     }
  1132  0E8F  3001               	movlw	1
  1133  0E90  02F2               	subwf	neopixel_send@bits,f
  1134  0E91  0872               	movf	neopixel_send@bits,w
  1135  0E92  1D03               	btfss	3,2
  1136  0E93  2E95               	goto	u161
  1137  0E94  2E96               	goto	u160
  1138  0E95                     u161:
  1139  0E95  2E81               	goto	l136
  1140  0E96                     u160:
  1141  0E96                     l139:
  1142  0E96  0008               	return
  1143  0E97                     __end_of_neopixel_send:
  1144                           
  1145                           	psect	text3
  1146  0E97                     __ptext3:	
  1147 ;; *************** function _UBMP4_config *****************
  1148 ;; Defined at:
  1149 ;;		line 29 in file "UBMP4.c"
  1150 ;; Parameters:    Size  Location     Type
  1151 ;;		None
  1152 ;; Auto vars:     Size  Location     Type
  1153 ;;		None
  1154 ;; Return value:  Size  Location     Type
  1155 ;;                  1    wreg      void 
  1156 ;; Registers used:
  1157 ;;		wreg, status,2
  1158 ;; Tracked objects:
  1159 ;;		On entry : 0/0
  1160 ;;		On exit  : 0/0
  1161 ;;		Unchanged: 0/0
  1162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1167 ;;Total ram usage:        0 bytes
  1168 ;; Hardware stack levels used: 1
  1169 ;; This function calls:
  1170 ;;		Nothing
  1171 ;; This function is called by:
  1172 ;;		_main
  1173 ;; This function uses a non-reentrant model
  1174 ;;
  1175                           
  1176                           
  1177                           ;psect for function _UBMP4_config
  1178  0E97                     _UBMP4_config:
  1179  0E97                     l827:	
  1180                           ;incstack = 0
  1181                           ; Regs used in _UBMP4_config: [wreg+status,2]
  1182                           
  1183                           
  1184                           ;UBMP4.c: 31:     OPTION_REG = 0b01010111;
  1185  0E97  3057               	movlw	87
  1186  0E98  0021               	movlb	1	; select bank1
  1187  0E99  0095               	movwf	21	;volatile
  1188  0E9A                     l829:
  1189                           
  1190                           ;UBMP4.c: 33:     LATA = 0b00000000;
  1191  0E9A  0022               	movlb	2	; select bank2
  1192  0E9B  018C               	clrf	12	;volatile
  1193  0E9C                     l831:
  1194                           
  1195                           ;UBMP4.c: 34:     TRISA = 0b00001111;
  1196  0E9C  300F               	movlw	15
  1197  0E9D  0021               	movlb	1	; select bank1
  1198  0E9E  008C               	movwf	12	;volatile
  1199                           
  1200                           ;UBMP4.c: 35:     ANSELA = 0b00000000;
  1201  0E9F  0023               	movlb	3	; select bank3
  1202  0EA0  018C               	clrf	12	;volatile
  1203  0EA1                     l833:
  1204                           
  1205                           ;UBMP4.c: 36:     WPUA = 0b00001000;
  1206  0EA1  3008               	movlw	8
  1207  0EA2  0024               	movlb	4	; select bank4
  1208  0EA3  008C               	movwf	12	;volatile
  1209  0EA4                     l835:
  1210                           
  1211                           ;UBMP4.c: 38:     LATB = 0b00000000;
  1212  0EA4  0022               	movlb	2	; select bank2
  1213  0EA5  018D               	clrf	13	;volatile
  1214                           
  1215                           ;UBMP4.c: 39:     TRISB = 0b11110000;
  1216  0EA6  30F0               	movlw	240
  1217  0EA7  0021               	movlb	1	; select bank1
  1218  0EA8  008D               	movwf	13	;volatile
  1219  0EA9                     l837:
  1220                           
  1221                           ;UBMP4.c: 40:     ANSELB = 0b00000000;
  1222  0EA9  0023               	movlb	3	; select bank3
  1223  0EAA  018D               	clrf	13	;volatile
  1224  0EAB                     l839:
  1225                           
  1226                           ;UBMP4.c: 41:     WPUB = 0b11110000;
  1227  0EAB  30F0               	movlw	240
  1228  0EAC  0024               	movlb	4	; select bank4
  1229  0EAD  008D               	movwf	13	;volatile
  1230                           
  1231                           ;UBMP4.c: 43:     LATC = 0b00000000;
  1232  0EAE  0022               	movlb	2	; select bank2
  1233  0EAF  018E               	clrf	14	;volatile
  1234  0EB0                     l841:
  1235                           
  1236                           ;UBMP4.c: 44:     TRISC = 0b00001110;
  1237  0EB0  300E               	movlw	14
  1238  0EB1  0021               	movlb	1	; select bank1
  1239  0EB2  008E               	movwf	14	;volatile
  1240  0EB3                     l843:
  1241                           
  1242                           ;UBMP4.c: 45:     ANSELC = 0b00000000;
  1243  0EB3  0023               	movlb	3	; select bank3
  1244  0EB4  018E               	clrf	14	;volatile
  1245  0EB5                     l55:
  1246  0EB5  0008               	return
  1247  0EB6                     __end_of_UBMP4_config:
  1248                           
  1249                           	psect	text4
  1250  0E70                     __ptext4:	
  1251 ;; *************** function _OSC_config *****************
  1252 ;; Defined at:
  1253 ;;		line 21 in file "UBMP4.c"
  1254 ;; Parameters:    Size  Location     Type
  1255 ;;		None
  1256 ;; Auto vars:     Size  Location     Type
  1257 ;;		None
  1258 ;; Return value:  Size  Location     Type
  1259 ;;                  1    wreg      void 
  1260 ;; Registers used:
  1261 ;;		wreg
  1262 ;; Tracked objects:
  1263 ;;		On entry : 0/0
  1264 ;;		On exit  : 0/0
  1265 ;;		Unchanged: 0/0
  1266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1271 ;;Total ram usage:        0 bytes
  1272 ;; Hardware stack levels used: 1
  1273 ;; This function calls:
  1274 ;;		Nothing
  1275 ;; This function is called by:
  1276 ;;		_main
  1277 ;; This function uses a non-reentrant model
  1278 ;;
  1279                           
  1280                           
  1281                           ;psect for function _OSC_config
  1282  0E70                     _OSC_config:
  1283  0E70                     l825:	
  1284                           ;incstack = 0
  1285                           ; Regs used in _OSC_config: [wreg]
  1286                           
  1287                           
  1288                           ;UBMP4.c: 23:     OSCCON = 0xFC;
  1289  0E70  30FC               	movlw	252
  1290  0E71  0021               	movlb	1	; select bank1
  1291  0E72  0099               	movwf	25	;volatile
  1292                           
  1293                           ;UBMP4.c: 24:     ACTCON = 0x90;
  1294  0E73  3090               	movlw	144
  1295  0E74  0027               	movlb	7	; select bank7
  1296  0E75  009B               	movwf	27	;volatile
  1297  0E76                     l49:	
  1298                           ;UBMP4.c: 25:     while(!PLLRDY);
  1299                           
  1300  0E76  0021               	movlb	1	; select bank1
  1301  0E77  1F1A               	btfss	26,6	;volatile
  1302  0E78  2E7A               	goto	u171
  1303  0E79  2E7B               	goto	u170
  1304  0E7A                     u171:
  1305  0E7A  2E76               	goto	l49
  1306  0E7B                     u170:
  1307  0E7B                     l52:
  1308  0E7B  0008               	return
  1309  0E7C                     __end_of_OSC_config:
  1310  007E                     btemp	set	126	;btemp
  1311  007E                     wtemp0	set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         34
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     14      48
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    neopixel_fill_a@blue	PTR unsigned char  size(1) Largest target is 10
		 -> blueArray(BANK0[10]), 

    neopixel_fill_a@red	PTR unsigned char  size(1) Largest target is 10
		 -> redArray(BANK0[10]), 

    neopixel_fill_a@green	PTR unsigned char  size(1) Largest target is 10
		 -> greenArray(BANK0[10]), 


Critical Paths under _main in COMMON

    _main->_neopixel_fill_a
    _neopixel_fill_a->_neopixel_send

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0    1228
                                             11 COMMON     3     3      0
                                              0 BANK0     14    14      0
                         _OSC_config
                       _UBMP4_config
                    _neopixel_fill_a
 ---------------------------------------------------------------------------------
 (1) _neopixel_fill_a                                      8     5      3     725
                                              3 COMMON     8     5      3
                      _neopixel_send
 ---------------------------------------------------------------------------------
 (2) _neopixel_send                                        3     3      0      91
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _UBMP4_config                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _OSC_config                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OSC_config
   _UBMP4_config
   _neopixel_fill_a
     _neopixel_send

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      E      30       5       60.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      3E      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      3E      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Dec 09 10:46:10 2021

   __end_of_neopixel_send 0E97                        l52 0E7B                        l55 0EB5  
                      l49 0E76                        _GO 04E9   __end_of_neopixel_fill_a 0EEA  
                     l115 0FEC                       l136 0E81                       l128 0EE9  
                     l138 0E88                       l139 0E96                       l821 0E87  
                     l901 0F97                       l831 0E9C                       l823 0E8B  
                     l815 0E7D                       l911 0FC1                       l903 0F9E  
                     l825 0E70                       l841 0EB0                       l833 0EA1  
                     l913 0FCE                       l905 0FA4                       l843 0EB3  
                     l835 0EA4                       l827 0E97                       l851 0EDC  
                     l915 0FF1                       l907 0FB4                       l837 0EA9  
                     l829 0E9A                       l845 0EB7                       l909 0FBC  
                     l861 0EFD                       l853 0EEA                       l839 0EAB  
                     l847 0EBA                       l855 0EF0                       l849 0ED8  
                     l881 0F38                       l873 0F04                       l857 0EF5  
                     l883 0F40                       l875 0F1B                       l867 0F01  
                     l859 0EF9                       l893 0F7D                       l885 0F45  
                     l877 0F22                       l887 0F52                       l879 0F28  
                     l889 0F70                       l899 0F80                       u200 0F52  
                     u201 0F51                       u210 0F70                       u211 0F6F  
                     u220 0F9E                       u221 0F9D                       u205 0F4E  
                     u150 0E87                       u230 0FCE                       u151 0E86  
                     u231 0FCD                       u215 0F6C                       u160 0E96  
                     u240 0FEC                       u161 0E95                       u241 0FEB  
                     u170 0E7B                       u250 0FF1                       u171 0E7A  
                     u251 0FF0                       u235 0FCA                       u180 0EE9  
                     u181 0EE8                       u245 0FE8                       u190 0F22  
                     u191 0F21                       u185 0EE5                       u277 0F3B  
                     u287 0FB7                       _red 0022                       wreg 0009  
                    _ADON 04E8               main@leftNum 004C                      _LATA 010C  
                    _LATB 010D                      _LATC 010E                      _WPUA 020C  
                    _WPUB 020D                      _blue 0020                      _main 0EEA  
                    _leds 0023                      fsr0h 0005                      fsr1h 0007  
                    indf0 0000                      fsr0l 0004                      indf1 0001  
                    fsr1l 0006                      btemp 007E               main@prevNum 0046  
                    start 0803                     ?_main 0070                     _TRISA 008C  
                   _TRISB 008D                     _TRISC 008E                     _green 0021  
                   main@i 0048               ?_OSC_config 0070                     status 0003  
                   wtemp0 007E       neopixel_send@colour 0071           __initialization 0FF5  
            __end_of_main 0FF5          ?_neopixel_fill_a 0073                    ??_main 007B  
                  _ADCON0 009D                    _ADCON1 009E                    _ADCON2 009F  
                  _ACTCON 039B                    _ADRESH 009C                    _ANSELA 018C  
                  _ANSELB 018D                    _ANSELC 018E                    _OSCCON 0099  
                  _PLLRDY 04D6       __size_of_OSC_config 000C                    main@i3 004A  
                  main@i4 0044                    main@ii 0042   __end_of__initialization 0FFD  
          __pcstackCOMMON 0070             ?_UBMP4_config 0070                __pbssBANK0 0020  
          ??_UBMP4_config 0070                __pmaintext 0EEA    __size_of_neopixel_send 001B  
            ??_OSC_config 0070                _greenArray 002E                   __ptext1 0EB6  
                 __ptext2 0E7C                   __ptext3 0E97                   __ptext4 0E70  
      __end_of_OSC_config 0E7C                   clrloop0 0E6B      end_of_initialization 0FFD  
           _neopixel_send 0E7C                 _PORTAbits 000C                 _TRISCbits 008E  
__size_of_neopixel_fill_a 0034      __end_of_UBMP4_config 0EB6         neopixel_send@bits 0072  
          ?_neopixel_send 0070       start_initialization 0FF5                 ___latbits 0002  
           __pcstackBANK0 0042         ??_neopixel_fill_a 0076           ??_neopixel_send 0070  
               _blueArray 0024     __size_of_UBMP4_config 001F                  _LATCbits 010E  
               clear_ram0 0E6A              _UBMP4_config 0E97                  _redArray 0038  
           __size_of_main 010B     neopixel_fill_a@ledNum 0079           main@prevLeftNum 004E  
         _neopixel_fill_a 0EB6      neopixel_fill_a@green 0074                _OPTION_REG 0095  
     neopixel_fill_a@blue 0075       neopixel_fill_a@leds 0078                _OSC_config 0E70  
      neopixel_fill_a@red 0073  
